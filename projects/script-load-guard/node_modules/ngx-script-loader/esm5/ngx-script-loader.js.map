{
  "version": 3,
  "file": "ngx-script-loader.js",
  "sources": [
    "ng://ngx-script-loader/out/app/script-loader/script-loader.module.ts",
    "ng://ngx-script-loader/out/app/script-loader/script.component.ts",
    "ng://ngx-script-loader/out/app/script-loader/script.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ScriptService } from './script.service';\nimport { CommonModule } from '@angular/common';\nimport { ScriptComponent } from './script.component';\n\n@NgModule({\n  declarations: [\n    ScriptComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ScriptComponent\n  ]\n})\nexport class ScriptLoaderModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ScriptLoaderModule,\n      providers: [\n        ScriptService\n      ]\n    };\n  }\n}\n",
    "import { Component, OnInit, Input, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { ScriptService } from './script.service';\n\n@Component({\n  selector: 'ngx-script',\n  template: '',\n  styles: []\n})\nexport class ScriptComponent implements OnInit {\n\n  @Input()\n  src: string;\n\n  @Input()\n  attributes: {[key: string]: string} = {};\n\n  @Output() load = new EventEmitter<Event>();\n\n  @Output() error = new EventEmitter<Event>();\n\n  constructor(private scriptService: ScriptService, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.scriptService.loadScript(this.src, this.attributes, this.element.nativeElement)\n      .subscribe((event) => {\n        this.load.emit(event);\n      }, (error) => {\n        this.error.emit(error);\n      });\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/shareReplay';\n\ndeclare var document: any;\n\n@Injectable()\nexport class ScriptService {\n\n  private scriptsLoaders: {\n    [url: string]: Observable<Event>\n  } = {};\n\n  /**\n   *\n   * @param url Url of the external script to be loaded\n   * @param attributes Attribute list to be added to the script element\n   * @param targetEl Target element for the placing script tag. It can be a selector or a element reference\n   */\n  loadScript(url: string, attributes?: {[s: string]: string}, targetEl: HTMLElement | string = 'head' ): Observable<Event> {\n    if (url in this.scriptsLoaders) {\n      return this.scriptsLoaders[url];\n    }\n\n    this.scriptsLoaders[url] = Observable.create((observer) => {\n        const script: HTMLScriptElement = document.createElement('script');\n\n        if (attributes) {\n          for (const key in attributes) {\n            if (attributes.hasOwnProperty(key)) {\n              script.setAttribute(key, attributes[key]);\n            }\n          }\n        }\n\n        script.src = url;\n\n        script.onload = (event: Event) => {\n          observer.next(event);\n          observer.complete();\n        };\n\n        script.onerror = err => {\n          observer.error(err);\n        };\n\n        const targetElement: HTMLElement = typeof targetEl === 'string' ? document.querySelector(targetEl) : targetEl;\n        targetElement.appendChild(script);\n      })\n      .take(1)\n      .shareReplay(1);\n\n    return this.scriptsLoaders[url];\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
