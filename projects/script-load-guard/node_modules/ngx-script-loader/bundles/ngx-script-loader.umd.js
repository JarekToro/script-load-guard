(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/Observable'), require('rxjs/add/operator/take'), require('rxjs/add/operator/shareReplay'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define('ngx-script-loader', ['exports', '@angular/core', 'rxjs/Observable', 'rxjs/add/operator/take', 'rxjs/add/operator/shareReplay', '@angular/common'], factory) :
	(factory((global['ngx-script-loader'] = {}),global.ng.core,global.Rx,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.common));
}(this, (function (exports,core,Observable,take,shareReplay,common) { 'use strict';

var ScriptService = /** @class */ (function () {
    function ScriptService() {
        this.scriptsLoaders = {};
    }
    ScriptService.prototype.loadScript = function (url, attributes, targetEl) {
        if (targetEl === void 0) { targetEl = 'head'; }
        if (url in this.scriptsLoaders) {
            return this.scriptsLoaders[url];
        }
        this.scriptsLoaders[url] = Observable.Observable.create(function (observer) {
            var script = document.createElement('script');
            if (attributes) {
                for (var key in attributes) {
                    if (attributes.hasOwnProperty(key)) {
                        script.setAttribute(key, attributes[key]);
                    }
                }
            }
            script.src = url;
            script.onload = function (event) {
                observer.next(event);
                observer.complete();
            };
            script.onerror = function (err) {
                observer.error(err);
            };
            var targetElement = typeof targetEl === 'string' ? document.querySelector(targetEl) : targetEl;
            targetElement.appendChild(script);
        })
            .take(1)
            .shareReplay(1);
        return this.scriptsLoaders[url];
    };
    return ScriptService;
}());
ScriptService.decorators = [
    { type: core.Injectable },
];
var ScriptComponent = /** @class */ (function () {
    function ScriptComponent(scriptService, element) {
        this.scriptService = scriptService;
        this.element = element;
        this.attributes = {};
        this.load = new core.EventEmitter();
        this.error = new core.EventEmitter();
    }
    ScriptComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.scriptService.loadScript(this.src, this.attributes, this.element.nativeElement)
            .subscribe(function (event) {
            _this.load.emit(event);
        }, function (error) {
            _this.error.emit(error);
        });
    };
    return ScriptComponent;
}());
ScriptComponent.decorators = [
    { type: core.Component, args: [{
                selector: 'ngx-script',
                template: '',
                styles: []
            },] },
];
ScriptComponent.ctorParameters = function () { return [
    { type: ScriptService, },
    { type: core.ElementRef, },
]; };
ScriptComponent.propDecorators = {
    "src": [{ type: core.Input },],
    "attributes": [{ type: core.Input },],
    "load": [{ type: core.Output },],
    "error": [{ type: core.Output },],
};
var ScriptLoaderModule = /** @class */ (function () {
    function ScriptLoaderModule() {
    }
    ScriptLoaderModule.forRoot = function () {
        return {
            ngModule: ScriptLoaderModule,
            providers: [
                ScriptService
            ]
        };
    };
    return ScriptLoaderModule;
}());
ScriptLoaderModule.decorators = [
    { type: core.NgModule, args: [{
                declarations: [
                    ScriptComponent
                ],
                imports: [
                    common.CommonModule
                ],
                exports: [
                    ScriptComponent
                ]
            },] },
];

exports.ScriptService = ScriptService;
exports.ScriptComponent = ScriptComponent;
exports.ScriptLoaderModule = ScriptLoaderModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-script-loader.umd.js.map
